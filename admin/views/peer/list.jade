extends ../layout
block append js
  script(src='/js/table.js')
block content
  .container
    +tableHeader('Peers','/peer/create','Create Peer')
    +alerts()
    form(method='post', role='form')
      table.table.table-bordered
        thead
          tr
            th
              input#toggle(type='checkbox')
            th Hostname/IP
            th Status
            th Version
            th Location
            th Groups
            th Sponsor
            th Hits
            th Created
            th Updated
            th Seen
            th Active
        tbody
          each row,i in list
            tr
              td
                input(type='checkbox', name='remove[]', value=row.id)
              td(style='white-space:nowrap;')
                a(href='/peer/edit?id=#{row.id}')
                  =row.host
                  br
                  | (#{row.ip})
              td= row.status
              td(style='white-space:nowrap;')= row.metrics.version
              td(style='white-space:nowrap;')= row.location
              td
                if(!row.groups.length)
                  span.label.label-default (none)
                else
                  each g,i in row.groups.split(',')
                    if(g)
                      if(row.primaryGroup === g)
                        span.label.label-primary= g
                      else
                        span.label.label-default= g
                      =' '
              td(style='white-space:nowrap;')= row.sponsor.name
              td= row.hits
              td(style='white-space:nowrap;')= (new Date(row.metrics.dateCreated)).toLocaleString().replace(/\s+\([^)]+\)$/,'')
              td(style='white-space:nowrap;')= (new Date(row.metrics.dateModified)).toLocaleString().replace(/\s+\([^)]+\)$/,'')
              td(style='white-space:nowrap;')
                if row.metrics.dateSeen
                  | #{moment(row.metrics.dateSeen).diff(new Date(),'seconds')} sec
                else
                  | (never)
              td
                span.glyphicon.glyphicon-align-center(class='glyphicon-'+(row.active?'ok-circle text-success':'ban-circle text-danger'))
      div
        .pull-right.btn-group
          a.btn.btn-default(href='/peer?start=#{page.previous}&search=#{search}') Previous
          a.btn.btn-default(href='/peer?start=#{page.next}&search=#{search}') Next
        span #{page.start + 1} - #{page.end} of #{count} entries
        h4.text-success Lifecycle
        div
          button.btn.btn-success(name='start', value='true', type='submit')
            span.glyphicon.glyphicon-play
            | Start
          | &nbsp;
          button.btn.btn-danger(name='stop', value='true', type='submit')
            span.glyphicon.glyphicon-stop
            | Stop
          | &nbsp;
          button.btn.btn-primary(name='restart', value='true', type='submit')
            span.glyphicon.glyphicon-refresh
            | Restart
        h4.text-warning Operations
        div
          button.btn.btn-primary(name='test', value='true', type='submit')
            span.glyphicon.glyphicon-resize-small
            | Test
          | &nbsp;
          button.btn.btn-info(name='refresh', value='true', type='submit')
            span.glyphicon.glyphicon-refresh
            | Refresh
          | &nbsp;
          button.btn.btn-warning(name='prepare', value='true', type='submit', target='_blank')
            span.glyphicon.glyphicon-refresh
            | Prepare
          | &nbsp;
          button.btn.btn-success(name='install', value='true', type='submit', target='_blank')
            span.glyphicon.glyphicon-download
            | Install
          | &nbsp;
          button.btn.btn-primary(name='upgrade', value='true', type='submit', target='_blank')
            span.glyphicon.glyphicon-upload
            | Upgrade
          | &nbsp;
          button.btn.btn-warning(name='updateConfig', value='true', type='submit')
            span.glyphicon.glyphicon-cog
            | Update Config
        h4.text-primary Custom
        div
          input.form-control(style='display: inline; width: 300px;', type='text', name='command', placeholder='Command to run on selected nodes')
          button.btn.btn-success(name='runCommand', value='true', type='submit')
            span.glyphicon.glyphicon-flash
            | Run
          input(type='checkbox', name='runCommandParallel', value='true', checked=true)
          small  Run Command in Parallel
        h4.text-danger Destructive
        div
          button.btn.btn-danger#tableDelete(name='delete', value='true', type='submit')
            span.glyphicon.glyphicon-remove
            | Delete Checked
